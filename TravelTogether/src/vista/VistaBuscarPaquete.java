/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;


import entidad.Compras;
import entidad.Paquete;
import java.util.Date;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistencia.AlojamientoData;
import persistencia.CiudadData;
import persistencia.ComprasData;
import persistencia.PaqueteData;
import persistencia.PasajeData;
import persistencia.PensionData;
import persistencia.TuristaData;

/**
 *
 * @author Usuario
 */
public class VistaBuscarPaquete extends javax.swing.JInternalFrame {

    DefaultTableModel model = null;
    PaqueteData pd = null;
    CiudadData ciudadData = null;
    PasajeData pasdata = null;
    AlojamientoData ad = null;
    PensionData pendat = null;
    TuristaData td = null;
    ComprasData comdat = null;
    
    public VistaBuscarPaquete() {
        initComponents();
        OcultarCompra();
        BotonComprar.setEnabled(true);
        
        pd = new PaqueteData();
        model = new DefaultTableModel();
        pasdata = new PasajeData();
        ciudadData = new CiudadData();
        ad = new AlojamientoData();
        pendat = new PensionData();
        td = new TuristaData();
        comdat = new ComprasData();
        
        cargarModelo();
        cargarDatosTodas();
        cargarComboCiudades();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ComboCiudades = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaPaquetes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BotonComprar = new javax.swing.JButton();
        DNIText = new javax.swing.JTextField();
        CantidadText = new javax.swing.JTextField();
        LabelDNI = new javax.swing.JLabel();
        LabelCantidad = new javax.swing.JLabel();
        LabelFechaI = new javax.swing.JLabel();
        LabelFechaF = new javax.swing.JLabel();
        ChooserIni = new com.toedter.calendar.JDateChooser();
        ChooserFin = new com.toedter.calendar.JDateChooser();
        BotonConfirmar = new javax.swing.JButton();

        setClosable(true);

        ComboCiudades.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ComboCiudades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboCiudadesActionPerformed(evt);
            }
        });

        TablaPaquetes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TablaPaquetes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaPaquetesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaPaquetes);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BUSCA TU PAQUETE IDEAL");

        jLabel2.setText("Filtra por ciudad de Destino:");

        BotonComprar.setText("Comprar");
        BotonComprar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonComprarActionPerformed(evt);
            }
        });

        DNIText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DNITextKeyTyped(evt);
            }
        });

        CantidadText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CantidadTextKeyTyped(evt);
            }
        });

        LabelDNI.setText("DNI:");

        LabelCantidad.setText("CANTIDAD DE PERSONAS:");

        LabelFechaI.setText("FECHA INICIO:");

        LabelFechaF.setText("FECHA FIN:");

        BotonConfirmar.setText("Confirmar");
        BotonConfirmar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BotonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonConfirmarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelDNI)
                    .addComponent(LabelFechaI))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DNIText)
                    .addComponent(ChooserIni, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelCantidad)
                    .addComponent(LabelFechaF))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ChooserFin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CantidadText, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BotonComprar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BotonConfirmar, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelDNI)
                    .addComponent(DNIText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelCantidad)
                    .addComponent(CantidadText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonConfirmar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(BotonComprar, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ChooserIni, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(LabelFechaI, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(LabelFechaF)
                        .addComponent(ChooserFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComboCiudadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboCiudadesActionPerformed
        model.setRowCount(0);
        
        String select = (String)ComboCiudades.getSelectedItem();
        
        if (select == "Todas") {
            cargarDatosTodas();
        } else {
            cargarDatosxCiudad();
        }
        
    }//GEN-LAST:event_ComboCiudadesActionPerformed

    private void TablaPaquetesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaPaquetesMouseClicked
        
        BotonComprar.setEnabled(true);
    }//GEN-LAST:event_TablaPaquetesMouseClicked

    private void BotonComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonComprarActionPerformed
        
        DESOcultarCompra();
        
    }//GEN-LAST:event_BotonComprarActionPerformed

    private void BotonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonConfirmarActionPerformed
        
        int selectedRow = TablaPaquetes.getSelectedRow();

        Paquete paquete = new Paquete();
        
        try {
            
            paquete.setCodPaquete((Integer) TablaPaquetes.getValueAt(selectedRow, 0) * 2);
            
            String transporte = (String) TablaPaquetes.getValueAt(selectedRow, 1);
            int cod = 0;
            if(transporte.equals("Avion")){
                cod = 3;
            } else if (transporte.equals("Colectivo")){
                cod = 5;
            } else{
                cod = 6;
        }
            
            paquete.setBoleto(pasdata.buscarPasaje(cod));
            paquete.setEstadia(ad.buscarAlojamientoPorNombre((String) TablaPaquetes.getValueAt(selectedRow, 2)));
            
            String regimen =  (String) TablaPaquetes.getValueAt(selectedRow, 3);
            int pension = 0;
            
            if (regimen.equals("Sin Pension")){
                pension = 1;
            } else if (regimen.equals("Con Desayuno")) {
                pension= 2;
            } else if (regimen.equals("Media Pension")){
                pension = 3;
            } else {
                pension = 4;
            }
            
            
            paquete.setRegimen(pendat.buscarPension(pension));
            paquete.setOrigen(ciudadData.buscarCiudad((String) TablaPaquetes.getValueAt(selectedRow, 4)));
            paquete.setDestino(ciudadData.buscarCiudad((String) TablaPaquetes.getValueAt(selectedRow, 5)));
            paquete.setTraslados((Float) TablaPaquetes.getValueAt(selectedRow, 6));
            paquete.setMontoFinal((Double) TablaPaquetes.getValueAt(selectedRow, 7));
            Date fechaini = ChooserIni.getDate();
            LocalDate localDate = fechaini.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            Date fechafin = ChooserFin.getDate();
            LocalDate localDate1 = fechafin.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            paquete.setFechaIni(localDate);
            paquete.setFechaFin(localDate1);
            paquete.setTurista(td.buscarTurista(Integer.parseInt(DNIText.getText())));
            pd.guardarPaquete(paquete);
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "Seleccione un paquete", "Error", JOptionPane.ERROR_MESSAGE);
        } //catch (Exception e){
          //  JOptionPane.showMessageDialog(this, "Complete todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
      //  }

        try{
            paquete.setMontoFinal((Double) TablaPaquetes.getValueAt(selectedRow, 7) * (Integer.parseInt(CantidadText.getText())));
        Compras compra = new Compras();
        compra.setPaquete(paquete);
        compra.setCiudad(paquete.getDestino());
        compra.setTemporada(compra.calcularTemporada(paquete));
        comdat.generarCompra(compra);
        JOptionPane.showMessageDialog(this, "Compra realizada con exito! Monto final: $" + paquete.getMontoFinal(), "Exito", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Algo Salió mal comprando", "Algo salió mal", JOptionPane.WARNING_MESSAGE);
        }
        

    }//GEN-LAST:event_BotonConfirmarActionPerformed

    private void DNITextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DNITextKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        
        if (!Character.isDigit(c)) {
            evt.consume(); 
        }
    }//GEN-LAST:event_DNITextKeyTyped

    private void CantidadTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CantidadTextKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        
        if (!Character.isDigit(c)) {
            evt.consume(); 
        }
    }//GEN-LAST:event_CantidadTextKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonComprar;
    private javax.swing.JButton BotonConfirmar;
    private javax.swing.JTextField CantidadText;
    private com.toedter.calendar.JDateChooser ChooserFin;
    private com.toedter.calendar.JDateChooser ChooserIni;
    private javax.swing.JComboBox<String> ComboCiudades;
    private javax.swing.JTextField DNIText;
    private javax.swing.JLabel LabelCantidad;
    private javax.swing.JLabel LabelDNI;
    private javax.swing.JLabel LabelFechaF;
    private javax.swing.JLabel LabelFechaI;
    private javax.swing.JTable TablaPaquetes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void OcultarCompra(){
        DNIText.setVisible(false);
        CantidadText.setVisible(false);
        LabelDNI.setVisible(false);
        LabelCantidad.setVisible(false);
        LabelFechaI.setVisible(false);
        LabelFechaF.setVisible(false);
        ChooserIni.setVisible(false);
        ChooserFin.setVisible(false);
        BotonComprar.setVisible(true);
        BotonConfirmar.setVisible(false);
    }
    
    private void DESOcultarCompra(){
        DNIText.setVisible(true);
        CantidadText.setVisible(true);
        LabelDNI.setVisible(true);
        LabelCantidad.setVisible(true);
        LabelFechaI.setVisible(true);
        LabelFechaF.setVisible(true);
        ChooserIni.setVisible(true);
        ChooserFin.setVisible(true);
        BotonConfirmar.setVisible(true);
        BotonComprar.setVisible(false);
    }
    
    private void cargarModelo(){
        
        ArrayList<Object> columnas = new ArrayList();
        
        columnas.add("Cod Paquete");
        columnas.add("Boleto");
        columnas.add("Estadía");
        columnas.add("Regimen");
        columnas.add("Origen");
        columnas.add("Destino");
        columnas.add("Traslados");
        columnas.add("Monto Final");
        
        for (Object aux : columnas) {
            model.addColumn(aux);
        }
        TablaPaquetes.setModel(model);
    }
    
    private void cargarDatosTodas(){
        List <Paquete> paquetes = pd.listarPaquetes();
        
        for (Paquete aux : paquetes) {
            model.addRow(new Object[]{
                aux.getCodPaquete(),
                aux.getBoleto().getTransporte(),
                aux.getEstadia().getNombre(),
                aux.getRegimen().getNombre(),
                aux.getOrigen().getNombre(),
                aux.getDestino().getNombre(),
                aux.getTraslados(),
                aux.getMontoFinal()
            });
        }
    }
    
    private void cargarDatosxCiudad(){
        String select = (String)ComboCiudades.getSelectedItem();
        
        List <Paquete> paquetes = pd.listarPaquetesXDestino(select);
        
        for (Paquete aux : paquetes) {
            model.addRow(new Object[]{
                aux.getCodPaquete(),
                aux.getBoleto().getCodPasaje(),
                aux.getEstadia().getCodAlojam(),
                aux.getRegimen().getCodAdicional(),
                aux.getOrigen().getNombre(),
                aux.getDestino().getNombre(),
                aux.getTraslados(),
                aux.getMontoFinal()
            });
        }
        
        
    }
    
    private void cargarComboCiudades(){
        
        if (ciudadData == null) {
            ciudadData = new CiudadData();
        }

        List<String> nombresCiudades = ciudadData.listarNombresCiudades();
        ComboCiudades.removeAllItems();
        ComboCiudades.addItem("Todas");

        for (String nombre : nombresCiudades) {
            ComboCiudades.addItem(nombre); 
        }
        
        
    }

}
