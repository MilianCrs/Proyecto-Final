/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import entidad.Alojamiento;
import entidad.Habitacion;
import java.awt.BorderLayout;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;
import persistencia.AlojamientoData;
import persistencia.CiudadData;

public class VistaAlojamiento extends javax.swing.JInternalFrame {

    CiudadData ciudadData;
    AlojamientoData alojamientoData;

    String[] columnNames = {"Ciudad", "Nombre", "Tipo", "Precio", "Capacidad"};
    DefaultTableModel model = new DefaultTableModel(columnNames, 0);

    public VistaAlojamiento() {
        initComponents();

        cagarListaCiudad();
        desactivarHHotel();
        desactivarCampos();

        tablaAlojamiento.getSelectionModel().addListSelectionListener(e -> {

            if (!e.getValueIsAdjusting()) {

                int selectedRow = tablaAlojamiento.getSelectedRow();

                guardarBoton.setEnabled(false);
                cagarValores(selectedRow);
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTFCiudad = new javax.swing.JTextField();
        jBValidar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        JTFnbreAlojamiento = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jCBtipo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jSpinnerCapacidad = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jTFPrecio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jSpinnerbaños = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jSpinnerAmbientes = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jSpinnerCamas = new javax.swing.JSpinner();
        jPanelHabitacionHotel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTFHabitaciones = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jSpinnerHSimples = new javax.swing.JSpinner();
        jSpinnerHDobles = new javax.swing.JSpinner();
        jSpinnerHTripe = new javax.swing.JSpinner();
        jSpinnerHSuite = new javax.swing.JSpinner();
        jLabel17 = new javax.swing.JLabel();
        jTFprecioBase = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTableAlojamiento = new javax.swing.JScrollPane();
        tablaAlojamiento = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jCBCiudades = new javax.swing.JComboBox<>();
        guardarBoton = new javax.swing.JButton();
        eliminarBoton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        actualizarBoton = new javax.swing.JButton();

        setClosable(true);
        setTitle("Gestion Alojamiento");
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Nombre de la ciudad");

        jTFCiudad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCiudadActionPerformed(evt);
            }
        });
        jTFCiudad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTFCiudadKeyTyped(evt);
            }
        });

        jBValidar.setText("Verificar");
        jBValidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBValidarActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Nombre alojamiento:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Tipo de Alojamiento:");

        jCBtipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Cabaña", "Hotel", "Hostel" }));
        jCBtipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBtipoActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Capacidad:");

        jSpinnerCapacidad.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Precio por Noche:");

        jTFPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFPrecioActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Baños:");

        jSpinnerbaños.setModel(new javax.swing.SpinnerNumberModel(0, 0, 5, 1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("N° Ambientes");

        jSpinnerAmbientes.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3, 1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Camas:");

        jSpinnerCamas.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10, 1));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel9)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCBtipo, 0, 95, Short.MAX_VALUE)
                    .addComponent(JTFnbreAlojamiento)
                    .addComponent(jSpinnerCapacidad))
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSpinnerAmbientes)
                    .addComponent(jSpinnerbaños)
                    .addComponent(jSpinnerCamas, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jLabel8)
                .addGap(28, 28, 28)
                .addComponent(jTFPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JTFnbreAlojamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jSpinnerbaños, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBtipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jSpinnerAmbientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSpinnerCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jSpinnerCamas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTFPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanelHabitacionHotel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Habitaciones/Hotel");

        jLabel11.setText("N° Habitaciones");

        jLabel13.setText("N° H/Simple");

        jLabel14.setText("N° H/Doble");

        jLabel15.setText("N° H/Triple");

        jLabel16.setText("N° H/Suite");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Precio");

        javax.swing.GroupLayout jPanelHabitacionHotelLayout = new javax.swing.GroupLayout(jPanelHabitacionHotel);
        jPanelHabitacionHotel.setLayout(jPanelHabitacionHotelLayout);
        jPanelHabitacionHotelLayout.setHorizontalGroup(
            jPanelHabitacionHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelHabitacionHotelLayout.createSequentialGroup()
                .addGroup(jPanelHabitacionHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHabitacionHotelLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabel2))
                    .addGroup(jPanelHabitacionHotelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanelHabitacionHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelHabitacionHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelHabitacionHotelLayout.createSequentialGroup()
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(4, 4, 4)
                                    .addComponent(jSpinnerHSimples, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelHabitacionHotelLayout.createSequentialGroup()
                                    .addGroup(jPanelHabitacionHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanelHabitacionHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanelHabitacionHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jSpinnerHTripe)
                                            .addComponent(jSpinnerHSuite, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jSpinnerHDobles, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanelHabitacionHotelLayout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jTFHabitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanelHabitacionHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTFprecioBase, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(27, 27, 27))
        );
        jPanelHabitacionHotelLayout.setVerticalGroup(
            jPanelHabitacionHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHabitacionHotelLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelHabitacionHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelHabitacionHotelLayout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTFprecioBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelHabitacionHotelLayout.createSequentialGroup()
                        .addGroup(jPanelHabitacionHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelHabitacionHotelLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel11))
                            .addGroup(jPanelHabitacionHotelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jTFHabitaciones, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelHabitacionHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinnerHSimples, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(6, 6, 6)
                        .addGroup(jPanelHabitacionHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jSpinnerHDobles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelHabitacionHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jSpinnerHTripe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelHabitacionHotelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinnerHSuite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTFCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBValidar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelHabitacionHotel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTFCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBValidar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelHabitacionHotel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel1.setBackground(new java.awt.Color(255, 153, 0));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Gestión de Alojamiento");

        jTableAlojamiento.setEnabled(false);
        jTableAlojamiento.setFocusable(false);

        tablaAlojamiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableAlojamiento.setViewportView(tablaAlojamiento);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Lista de Ciudadades");

        jCBCiudades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBCiudadesActionPerformed(evt);
            }
        });

        guardarBoton.setBackground(new java.awt.Color(51, 255, 51));
        guardarBoton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        guardarBoton.setText("Guardar");
        guardarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarBotonActionPerformed(evt);
            }
        });

        eliminarBoton.setBackground(new java.awt.Color(255, 102, 51));
        eliminarBoton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        eliminarBoton.setText("Eliminar");
        eliminarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBotonActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 0, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 0));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("Nuevo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        actualizarBoton.setBackground(new java.awt.Color(51, 204, 255));
        actualizarBoton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        actualizarBoton.setText("Actualizar");
        actualizarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(guardarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(eliminarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(actualizarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCBCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTableAlojamiento)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(312, 312, 312)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jCBCiudades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTableAlojamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarBoton)
                    .addComponent(eliminarBoton)
                    .addComponent(actualizarBoton)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void cagarValores(int fila) {

        try {
            String tipoA = (String) tablaAlojamiento.getValueAt(fila, 2);
            System.out.println("tipo :" + tipoA);
            String nombreAlojamineto = (String) tablaAlojamiento.getValueAt(fila, 1);
            Alojamiento aSeleccionado = alojamientoData.buscarAlojamientoPorNombre(nombreAlojamineto);
            jCBtipo.setSelectedIndex(obtenerPosicion(aSeleccionado.getTipo()));
            if (!tipoA.equals("Hotel")) {
                activarCampos();
                JTFnbreAlojamiento.setText(aSeleccionado.getNombre());
                JTFnbreAlojamiento.setEnabled(false);

                jSpinnerbaños.setValue(aSeleccionado.getBanios());
                jSpinnerAmbientes.setValue(aSeleccionado.getNroAmbientes());
                jSpinnerCamas.setValue(aSeleccionado.getCamas());
                jTFPrecio.setText((String.valueOf(aSeleccionado.getPrecioNoche())));
                jTFCiudad.setText(aSeleccionado.getNbreCiudad());
                jTFCiudad.setEnabled(false);

                //jCBtipo.setSelectedIndex(obtenerPosicion(aSeleccionado.getTipo()));
            } else {
                jCBtipo.setEnabled(true);
                JTFnbreAlojamiento.setText(aSeleccionado.getNombre());
                int codA = aSeleccionado.getCodAlojam();
                JTFnbreAlojamiento.setEnabled(false);
                jSpinnerCapacidad.setValue(aSeleccionado.getCapacidad());
                jTFCiudad.setText(aSeleccionado.getNbreCiudad());
                jTFCiudad.setEnabled(false);

                jTFprecioBase.setText(String.valueOf(aSeleccionado.getPrecioNoche()));

                List<Habitacion> habitaciones = alojamientoData.habitacionesAlojamiento(codA);
                int cantH = 0;
                for (Habitacion hab : habitaciones) {
                    if (hab.getTipo().equals("Simple")) {
                        jSpinnerHSimples.setValue(hab.getCantMax());
                        cantH = cantH + hab.getCantMax();
                    }
                    if (hab.getTipo().equals("Doble")) {
                        jSpinnerHDobles.setValue(hab.getCantMax());
                        cantH = cantH + hab.getCantMax();

                    }
                    if (hab.getTipo().equals("Triple")) {
                        jSpinnerHTripe.setValue(hab.getCantMax());
                        cantH = cantH + hab.getCantMax();
                    }
                    if (hab.getTipo().equals("Suite")) {
                        jSpinnerHSuite.setValue(hab.getCantMax());
                        cantH = cantH + hab.getCantMax();
                    }
                }

                jTFHabitaciones.setText(String.valueOf(cantH));
                activarHotel();
            }
        } catch (Exception e) {

        }

    }

    public int obtenerPosicion(String item) {

        for (int i = 0; i < jCBtipo.getItemCount(); i++) {
            if (jCBtipo.getItemAt(i).equals(item)) {
                return i; // Retorna el índice del elemento
            }
        }
        return -1; // Si el item no se encuentra, retorna -1
    }

    public void cargarTablaXciudad(String nombreCiudad) {
        if (alojamientoData == null) {
            alojamientoData = new AlojamientoData();
        }

        if (nombreCiudad.equals("Todas")) {
            List<Alojamiento> alojamientos = alojamientoData.listarAlojamientos();

            // Llenar el modelo con los datos de las ciudades
            for (Alojamiento aloj : alojamientos) {

                Object[] rowData
                        = {
                            aloj.getNbreCiudad(),
                            aloj.getNombre(),
                            aloj.getTipo(),
                            aloj.getPrecioNoche(),
                            aloj.getCapacidad(),
                            };

                model.addRow(rowData);
            }
        } else {
            List<Alojamiento> alojamientos = alojamientoData.listarAlojamientosXCiudad(nombreCiudad);

            // Llenar el modelo con los datos de las ciudades
            for (Alojamiento aloj : alojamientos) {

                Object[] rowData
                        = {
                            aloj.getNbreCiudad(),
                            aloj.getNombre(),
                            aloj.getTipo(),
                            aloj.getPrecioNoche(),
                            aloj.getCapacidad(),
                            };

                model.addRow(rowData);
            }
        }

        tablaAlojamiento.setModel(model);

    }

    public void cagarListaCiudad() {
        if (ciudadData == null) {
            ciudadData = new CiudadData();
        }

        List<String> nombresCiudades = ciudadData.listarNombresCiudades();
        jCBCiudades.removeAllItems();
        jCBCiudades.addItem("Todas");

        for (String nombre : nombresCiudades) {
            jCBCiudades.addItem(nombre); // Agregar cada nombre al ComboBox
        }
    }

    private void limpiarCampo() {
        JTFnbreAlojamiento.setText("");

        jTFCiudad.setText("");
        jTFPrecio.setText("");
        jCBtipo.setSelectedIndex(0);
        jSpinnerCapacidad.setValue(0);
        jSpinnerbaños.setValue(0);
        jSpinnerAmbientes.setValue(0);
        jSpinnerCamas.setValue(0);
        jSpinnerHSimples.setValue(0);
        jSpinnerHDobles.setValue(0);
        jSpinnerHTripe.setValue(0);
        jSpinnerHSuite.setValue(0);
        jTFHabitaciones.setText("");
        jTFprecioBase.setText("");

    }

    public boolean validarCampos() {

        boolean respuesta = false;
        if (!JTFnbreAlojamiento.getText().isEmpty()) {
            if (!jCBtipo.getSelectedItem().equals("-") && !jCBtipo.getSelectedItem().equals("Hotel")) {
                respuesta = (!((int) jSpinnerCapacidad.getValue() == 0) && (!((int) jSpinnerbaños.getValue() == 0)) && (!((int) jSpinnerAmbientes.getValue() == 0)) && (!((int) jSpinnerCamas.getValue() == 0)) && (!jTFPrecio.getText().isEmpty()));
            } else {
                if (!jCBtipo.getSelectedItem().equals("-")) {

                    int valor = ((int) jSpinnerHSimples.getValue()) + ((int) jSpinnerHDobles.getValue()) + ((int) jSpinnerHTripe.getValue()) + ((int) jSpinnerHSuite.getValue());
                    int cantH = Integer.parseInt(jTFHabitaciones.getText());

                    respuesta = (valor == cantH) && (!(jTFHabitaciones.getText().isEmpty())) && (!((int) jSpinnerHSimples.getValue() == 0)) && (!((int) jSpinnerHDobles.getValue() == 0)) && (!((int) jSpinnerHSimples.getValue() == 0)) && (!((int) jSpinnerHTripe.getValue() == 0)) && (!((int) jSpinnerHSuite.getValue() == 0)) && (!jTFprecioBase.getText().isEmpty());
                }
            }

        }

        System.out.println("respuesta" + respuesta);
        return respuesta;

    }


    private void guardarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarBotonActionPerformed

        guardarAlojamiento();

    }//GEN-LAST:event_guardarBotonActionPerformed

    public void guardarAlojamiento() {
        // Validamos los campos antes de proceder
        if (validarCampos()) {
            // Creamos el objeto alojamiento
            Alojamiento alojamiento = new Alojamiento();
            alojamiento.setNombre(JTFnbreAlojamiento.getText());
            alojamiento.setNbreCiudad(jTFCiudad.getText());
            alojamiento.setCapacidad((int) jSpinnerCapacidad.getValue());

            // Verificamos si es un hotel o no
            if (!jCBtipo.getSelectedItem().equals("Hotel")) {
                // Si no es hotel, asignamos los atributos correspondientes

                alojamiento.setCamas((int) jSpinnerCamas.getValue());
                alojamiento.setBanios((int) jSpinnerbaños.getValue());
                alojamiento.setNroAmbientes((int) jSpinnerAmbientes.getValue());
                alojamiento.setPrecioNoche(Double.parseDouble(jTFPrecio.getText()));
            } else {
                // Si es hotel, asignamos el precio base
                alojamiento.setPrecioNoche(Double.parseDouble(jTFprecioBase.getText()));
            }

            // Intentamos guardar el alojamiento primero
            alojamiento.setTipo((String) jCBtipo.getSelectedItem());
            System.out.println("**" + alojamiento.getTipo());
            int id = alojamientoData.guardarAlojamiento(alojamiento);

            if (id > 0) {
                // Si se guarda correctamente, mostramos mensaje
                JOptionPane.showMessageDialog(null, "Alojamiento guardado correctamente.");

                // Luego agregamos las habitaciones si es un hotel
                if (jCBtipo.getSelectedItem().equals("Hotel")) {

                    agregarHabitacion("Simple", (int) jSpinnerHSimples.getValue(), id);
                    agregarHabitacion("Doble", (int) jSpinnerHDobles.getValue(), id);
                    agregarHabitacion("Triple", (int) jSpinnerHTripe.getValue(), id);
                    agregarHabitacion("Suite", (int) jSpinnerHSuite.getValue(), id);

                }

                // Recargamos la tabla con la ciudad del alojamiento
                cargarTabla(jTFCiudad.getText());

                // Limpiamos y desactivamos los campos
                limpiarCampo();
                desactivarCampos();
                desactivarHHotel();
            } else {
                // Si no se pudo guardar el alojamiento, mostramos mensaje
                JOptionPane.showMessageDialog(null, "Error al guardar el alojamiento.");
            }
        } else {
            // Si la validación falla, mostramos un mensaje de error
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.");
        }
    }

    private void actualizarHabitacion(String tipo, int cantidad, int id) {
        if (cantidad > 0) {
            // Crear una instancia de la habitación que se va a actualizar
            Habitacion habitacion = new Habitacion();

            // Establecer los valores nuevos para la habitación
            habitacion.setIdAlojamineto(id);
            habitacion.setNombreAlojamiento(JTFnbreAlojamiento.getText());  // Establecer el nombre del alojamiento
            habitacion.setCantMax(cantidad);
            // habitacion.setCupo(0);            
            habitacion.setTipo(tipo);
            
             
           
            alojamientoData.modificarHabitacion(habitacion);
        } else {
            JOptionPane.showMessageDialog(null, "La cantidad debe ser mayor a cero.");
        }
    }

    private void agregarHabitacion(String tipo, int cantidad, int id) {
        if (cantidad > 0) {
            Habitacion habitacion = new Habitacion();

            habitacion.setIdAlojamineto(id);
            habitacion.setNombreAlojamiento(JTFnbreAlojamiento.getText());
            habitacion.setCantMax(cantidad);
            habitacion.setCupo(0);
            habitacion.setTipo(tipo);

            // Se puede ajustar si es necesario
            alojamientoData.agregarH(habitacion);
        }
    }

    private void actulizarHabitacion(String tipo, int cantidad, int id) {
        if (cantidad > 0) {
            Habitacion habitacion = new Habitacion();

            habitacion.setIdAlojamineto(id);
            habitacion.setNombreAlojamiento(JTFnbreAlojamiento.getText());
            habitacion.setCantMax(cantidad);
            habitacion.setCupo(0);
            habitacion.setTipo(tipo);

            // Se puede ajustar si es necesario
            alojamientoData.modificarHabitacion(habitacion);
        }
    }


    private void actualizarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarBotonActionPerformed
        Alojamiento alojActulizacion;
        Habitacion h;
        String tipo = (String) jCBtipo.getSelectedItem();

        try {
            if (tipo.equals("Hotel")) {
                // falta  
                alojActulizacion = new Alojamiento();
                alojActulizacion.setCapacidad((int) jSpinnerCapacidad.getValue());
                alojActulizacion.setPrecioNoche(Double.parseDouble(jTFprecioBase.getText()));

                int cod = alojamientoData.obtenerCodigoAlojamientoPorNombre(JTFnbreAlojamiento.getText());
                System.out.println("cant : "+ (int) jSpinnerHSimples.getValue());
                actualizarHabitacion("Simple", (int) jSpinnerHSimples.getValue(), cod);
                actualizarHabitacion("Doble", (int) jSpinnerHDobles.getValue(), cod);
                actualizarHabitacion("Triple", (int) jSpinnerHTripe.getValue(), cod);
                actualizarHabitacion("Suite", (int) jSpinnerHSuite.getValue(), cod);
                alojActulizacion.setTipo(tipo);

            } else {
                alojActulizacion = new Alojamiento();

                alojActulizacion.setCapacidad((int) jSpinnerCapacidad.getValue());
                alojActulizacion.setBanios((int) jSpinnerbaños.getValue());
                alojActulizacion.setNroAmbientes((int) jSpinnerAmbientes.getValue());
                alojActulizacion.setCamas((int) jSpinnerCamas.getValue());
                alojActulizacion.setPrecioNoche(Double.parseDouble(jTFPrecio.getText()));
                alojActulizacion.setTipo(tipo);

            }
            alojActulizacion.setNbreCiudad(jTFCiudad.getText());
            alojActulizacion.setNombre(JTFnbreAlojamiento.getText());
            alojamientoData.modificarAlojamiento(alojActulizacion);
            jBValidar.setEnabled(true);
            jTFCiudad.setEnabled(true);
            desactivarCampos();
            cargarTabla(jTFCiudad.getText());
            limpiarCampo();

        } catch (Exception e) {
            System.out.println("error Actulizacion" + e.getMessage());
        }


    }//GEN-LAST:event_actualizarBotonActionPerformed

    private void eliminarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBotonActionPerformed
        String tipo = (String) jCBtipo.getSelectedItem();
        int codigo = alojamientoData.obtenerCodigoAlojamientoPorNombre(JTFnbreAlojamiento.getText());
        if (tipo.equals("Hotel")) {
            alojamientoData.borrarHabitacion(codigo);
        }

        alojamientoData.borrarAlojamiento(codigo);
        cargarTabla(jTFCiudad.getText());

    }//GEN-LAST:event_eliminarBotonActionPerformed

    private void jTFCiudadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFCiudadKeyTyped

    }//GEN-LAST:event_jTFCiudadKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCBtipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBtipoActionPerformed

        try {
            String tipo = (String) jCBtipo.getSelectedItem();
            if (tipo.equals("Hotel")) {
                activarHotel();
                jSpinnerbaños.setEnabled(false);
                jSpinnerAmbientes.setEnabled(false);
                jSpinnerCamas.setEnabled(false);

            } else {
                desactivarHHotel();
                jSpinnerbaños.setEnabled(true);
                jSpinnerAmbientes.setEnabled(true);
                jSpinnerCamas.setEnabled(true);
            }
        } catch (Exception e) {
            System.out.println("*");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jCBtipoActionPerformed

    private void jCBCiudadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBCiudadesActionPerformed
        //tablaAlojamiento.getSelectionModel().removeListSelectionListener(tablaAlojamiento);
        cargarTabla((String) jCBCiudades.getSelectedItem());
    }//GEN-LAST:event_jCBCiudadesActionPerformed

    public void cargarTabla(String nombre) {
        limpiarTabla();
        cargarTablaXciudad(nombre);
    }


    private void jTFCiudadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCiudadActionPerformed


    }//GEN-LAST:event_jTFCiudadActionPerformed

    private void jBValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBValidarActionPerformed
        // VALIDAR CIUDAD  PARA VER SI ESTA CARGADA PARA INGRESAR NUEVO ALOJAMIENTO   
        if (ciudadData == null) {
            ciudadData = new CiudadData();
        }

        if (ciudadData.ciudadExiste(jTFCiudad.getText())) {
            JOptionPane.showMessageDialog(this, "Ciudad Exitente");
            // habiliar carga de datos para alojamiento
            activarCampos();
            guardarBoton.setEnabled(true);

        } else {
            JOptionPane.showMessageDialog(this, "Ciudad No ingresada");
            jTFCiudad.setText("");
        }


    }//GEN-LAST:event_jBValidarActionPerformed

    private void jTFPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFPrecioActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        limpiarCampo();

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    public void activarCampos() {
        JTFnbreAlojamiento.setEnabled(true);
        jCBtipo.setEnabled(true);
        jSpinnerCapacidad.setEnabled(true);
        jSpinnerbaños.setEnabled(true);
        jSpinnerAmbientes.setEnabled(true);
        jSpinnerCamas.setEnabled(true);
        jTFPrecio.setEnabled(true);
    }

    public void desactivarCampos() {
        JTFnbreAlojamiento.setEnabled(false);
        jCBtipo.setEnabled(false);
        jSpinnerCapacidad.setEnabled(false);
        jSpinnerbaños.setEnabled(false);
        jSpinnerAmbientes.setEnabled(false);
        jSpinnerCamas.setEnabled(false);
        jTFPrecio.setEnabled(false);
    }

    public void limpiarTabla() {
        model.setRowCount(0);
        tablaAlojamiento.setModel(model);
    }

    public void activarHotel() {

        jTFHabitaciones.setEnabled(true);
        jSpinnerHSimples.setEnabled(true);
        jSpinnerHDobles.setEnabled(true);
        jSpinnerHTripe.setEnabled(true);
        jSpinnerHSuite.setEnabled(true);
        jTFprecioBase.setEnabled(true);
    }

    public void desactivarHHotel() {
        jTFHabitaciones.setEnabled(false);
        jSpinnerHSimples.setEnabled(false);
        jSpinnerHDobles.setEnabled(false);
        jSpinnerHTripe.setEnabled(false);
        jSpinnerHSuite.setEnabled(false);
        jTFprecioBase.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTFnbreAlojamiento;
    private javax.swing.JButton actualizarBoton;
    private javax.swing.JButton eliminarBoton;
    private javax.swing.JButton guardarBoton;
    private javax.swing.JButton jBValidar;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jCBCiudades;
    private javax.swing.JComboBox jCBtipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelHabitacionHotel;
    private javax.swing.JSpinner jSpinnerAmbientes;
    private javax.swing.JSpinner jSpinnerCamas;
    private javax.swing.JSpinner jSpinnerCapacidad;
    private javax.swing.JSpinner jSpinnerHDobles;
    private javax.swing.JSpinner jSpinnerHSimples;
    private javax.swing.JSpinner jSpinnerHSuite;
    private javax.swing.JSpinner jSpinnerHTripe;
    private javax.swing.JSpinner jSpinnerbaños;
    private javax.swing.JTextField jTFCiudad;
    private javax.swing.JTextField jTFHabitaciones;
    private javax.swing.JTextField jTFPrecio;
    private javax.swing.JTextField jTFprecioBase;
    private javax.swing.JScrollPane jTableAlojamiento;
    private javax.swing.JTable tablaAlojamiento;
    // End of variables declaration//GEN-END:variables
}
